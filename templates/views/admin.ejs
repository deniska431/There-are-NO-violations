<!doctype html>
<html lang="en">
<head>
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <title>Панель администратора</title>
    <link rel="stylesheet" href="./css/style.css">
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css" rel="stylesheet">
</head>
<body>

<div class="container">
    <div id="login-form">
        <h1>Панель администратора</h1>
        <p>Пожалуйста, войдите для доступа к панели управления.</p>
        <button class="btn btn-dark" onclick="authenticate()">Войти</button>
    </div>

    <div id="requests-section" style="display:none;">
        <h2>Активные заявления</h2>
        <table class="table" id="requests-table">
            <thead>
                <tr>
                    <th>Имя</th>
                    <th>Номер машины</th>
                    <th>Услуга</th>
                    <th>Статус</th>
                    <th>Причина отклонения</th>
                    <th>Дата</th>
                    <th>Действия</th>
                </tr>
            </thead>
            <tbody id="requests-body"></tbody>
        </table>

        <h2>Зарегистрированные пользователи</h2>
        <table class="table" id="users-table">
            <thead>
                <tr>
                    <th>Имя</th>
                    <th>Email</th>
                    <th>Телефон</th>
                    <th>Логин</th>
                   
                </tr>
            </thead>
            <tbody id="users-body"></tbody>
        </table>
    </div>
</div>

<script>
    function authenticate() {
        const username = prompt("Введите логин:");
        const password = prompt("Введите пароль:");

        if (username === 'adminka' && password === 'password') {
            document.getElementById('login-form').style.display = 'none';
            document.getElementById('requests-section').style.display = 'block';
            fetchRequests(); 
            fetchUsers(); 
        } else {
            alert('Неверный логин или пароль!');
        }
    }

    async function fetchRequests() {
        try {
            const response = await fetch('/admin/requests');
            const requests = await response.json();
            const tableBody = document.getElementById('requests-body');
            tableBody.innerHTML = ''; 

            requests.forEach(request => {
                const row = document.createElement('tr');
                row.innerHTML = `
                    <td>${request.name}</td>
                    <td>${request.carNumber}</td>
                    <td>${request.reason}</td>
                    <td id="status-${request.id}">${request.status}</td>
                    <td>${request.rejectReason || 'нет'}</td>
                    <td>${new Date(request.date).toLocaleString()}</td>
                    <td>
                        <button class="btn btn-primary" onclick="confirmRequest('${request.id}')">Подтвердить</button>
                        <button class="btn btn-success" onclick="completeRequest('${request.id}')" disabled>Готово</button>
                        <button class="btn btn-danger" onclick="rejectRequest('${request.id}')">Отклонить</button>
                    </td>
                `;
                tableBody.appendChild(row);
            });
        } catch (error) {
            console.error('Ошибка при загрузке заявок:', error);
        }
    }

    async function fetchUsers() {
        try {
            const response = await fetch('/admin/users');
            const users = await response.json();
            const tableBody = document.getElementById('users-body');
            tableBody.innerHTML = ''; 

            users.forEach(user => {
                const row = document.createElement('tr');
                row.innerHTML = `
                    <td>${user.fullName}</td>
                    <td>${user.email}</td>
                    <td>${user.phone}</td>
                    <td>${user.username}</td>
                    
                `;
                tableBody.appendChild(row);
            });
        } catch (error) {
            console.error('Ошибка при загрузке пользователей:', error);
        }
    }

    async function deleteUser(userId) {
        const response = await fetch(`/admin/users/${userId}`, { method: 'DELETE' });
        if (response.ok) {
            alert("Пользователь удален");
            fetchUsers(); 
        } else {
            alert("Не удалось удалить пользователя: " + response.statusText);
        }
    }

    async function confirmRequest(requestId) {
        const response = await fetch(`/admin/requests/${requestId}/confirm`, { method: 'POST' });
        if (response.ok) {
            document.getElementById(`status-${requestId}`).innerText = "Подтверждена";
            const buttons = document.querySelectorAll(`button[onclick*='${requestId}']`);
            buttons[1].disabled = false; 
        }
    }

    async function completeRequest(requestId) {
        const response = await fetch(`/admin/requests/${requestId}/complete`, { method: 'POST' });
        if (response.ok) {
            document.getElementById(`status-${requestId}`).innerText = "Завершена";
            const row = document.querySelector(`button[onclick*='${requestId}']`).closest('tr');
            row.remove();
        }
    }

    async function rejectRequest(requestId) {
        const reason = prompt("Введите причину отклонения:");
        if (reason) {
            const response = await fetch(`/admin/requests/${requestId}/reject`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json'
                },
                body: JSON.stringify({ reason })
            });

            if (response.ok) {
                document.getElementById(`status-${requestId}`).innerText = 'отклонена';
                const statusCell = document.querySelector(`#status-${requestId}`);
                statusCell.innerHTML += `<br>(Причина: ${reason})`; 
                const buttons = document.querySelectorAll(`button[onclick*='${requestId}']`);
                buttons.forEach(button => button.disabled = true);
            }
        }
    }
</script>

</body>
</html>